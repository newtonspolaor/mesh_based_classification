function meshToCSV(T,X,Y,name,folder)
%Function that receives the mesh generated by Delaunay and the coordinates arrays, converts the mesh vertices to graph vertices and saves the corresponding graph into two spreadsheets. One spreadsheet has the vertices names and the other one has a dissimilarity matrix. The beginning of the spreadsheet names and the corresponding folder are passed as additional parameters. This script is executed after creating a mesh to define the input sent to build a graph representing the mesh. In turn, this graph feeds a piece of code that extracts graph-based features associated with the original mesh.
%Requires: the mesh generated by Delaunay, the coordinates arrays X and Y, the beginning of the spreadsheet names and the corresponding folder
%Ensures: two CSV files with the information needed to build a mutual K Nearest Neighbor graph.

%Please refer to the Matlab documentation to verify requirements and more information on the built-in functions unique, csvwrite, strcat, size, zeros and norm
%%creation of the first spreadsheet
vertices=unique((T(:)));
csvwrite(strcat(folder,'/',name,'_vertices.csv'),vertices);

%%creation of the second spreadsheet
nv=size(vertices,1);
dm = zeros(nv); %initiates the dm matrix elements with zero. In the end, zero will remain only in the elements representing the crossing between rows and columns of vertices without edges between them

%fill elements when there is edges between the corresponding vertices
nl=size(T,1);

for i=1:nl
    for j=1:2
        for k=j+1:3
            V1=[X(T(i,j)),Y(T(i,j))];
            V2=[X(T(i,k)),Y(T(i,k))];
            distance=norm(V1-V2);
            dm(T(i,j),T(i,k))=distance;
            dm(T(i,k),T(i,j))=distance;
        end
    end
end

csvwrite(strcat(folder,'/',name,'_matrix.csv'),dm);
